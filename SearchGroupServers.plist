(
/* Entrez databases */
    {
        type = entrez;
        name = PubMed;
        database = pubmed;
    },
    {
        type = entrez;
        name = "3D Domains";
        database = domains;
    },
    {
        type = entrez;
        name = Domains;
        database = cdd;
    },
    {
        type = entrez;
        name = Genome;
        database = genome;
    },
    {
        type = entrez;
        name = Nucleotide;
        database = nucleotide;
    },
    {
        type = entrez;
        name = OMIM;
        database = omim;
    },
    {
        type = entrez;
        name = PopSet;
        database = popset;
    },
    {
        type = entrez;
        name = Protein;
        database = protein;
    },
    {
        type = entrez;
        name = ProbeSet;
        database = geo;
    },
    {
        type = entrez;
        name = Structure;
        database = structure;
    },
    {
        type = entrez;
        name = SNP;
        database = snp;
    },
    {
        type = entrez;
        name = Taxonomy;
        database = taxonomy;
    },
    {
        type = entrez;
        name = UniGene;
        database = unigene;
    },
    {
        type = entrez;
        name = UniSTS;
        database = unists;
    },
/* z39.50 servers */

/* We use IANA charset names for encoding, since the NSString localized
 * names are not suitable for keys.  An empty resultEncoding will be
 * interpreted as MARC-8.
 */
    /* Library of Congress z39.50 connection */
    /* Canonical test server.                */
    {
        type = zoom;
        name = "Library of Congress";
        database = Voyager;
        host = "z3950.loc.gov";
        port = "7090";
        options = {
            recordSyntax = "US MARC";
            resultEncoding = "marc-8";
        };
    },
    /* USC z39.50 connection */
    /* This server limits the number of results that can be    */
    /* returned in a single query, so it's useful for testing. */
    {
        type = zoom;
        name = "University of Southern California";
        database = unicorn;
        host = "library.usc.edu";
        port = "2200";
        options = {
            recordSyntax = "US MARC";
            resultEncoding = "marc-8";
        };
    },
    /* COPAC z39.50 connection */
    /* Shows an alternate syntax and encoding specification. */
    {
        type = zoom;
        name = "COPAC";
        database = "copac";
        host = "z3950.copac.ac.uk";
        port = "2100";
        options = {
            recordSyntax = "MODS";
            resultEncoding = "utf-8";
        };
    },
    /* ADS z39.50 connection */
    /* Bastard DC XML output that's missing any XML header. */
    /* http://adsabs.harvard.edu/abs_doc/ads_server.html    */
    {
        type = zoom;
        name = "ADS Astronomy";
        database = "AST";
        host = "z3950.adsabs.harvard.edu";
        port = "210";
        options = {
            recordSyntax = "DC XML";
            resultEncoding = "utf-8";
        };
    },
    /* University of Basel z39.50 connection */
    /* Example of a UTF-8 server which accepts diacritics */
    /* in search strings.                                 */
    {
        type = zoom;
        name = "UB Basel";
        database = "IDS_UTF";
        host = "aleph.unibas.ch";
        port = "9909";
        options = {
            recordSyntax = "US MARC";
            resultEncoding = "utf-8";
        };
    },
    /* Columbia University */
    /* Illustrates the use of a customized query config string. */
    /* Note that the query config lines are separated by \n and */
    /* there must be no leading space in the first line.        */
    {
        type = zoom;
        name = "Columbia University";
        database = "voyager";
        host = "clio-db.cc.columbia.edu";
        port = "7090";
        options = {
            recordSyntax = "US MARC";
            resultEncoding = "marc-8";
            /* config string that maps CCL keys to numeric fields */
            /* http://www.loc.gov/z3950/agency/defns/bib1.html    */
            /* http://www.loc.gov/z3950/agency/bib1.html          */
            /* http://www.indexdata.com/yaz/doc/tools.tkl#CCL     */
            queryConfig =  "term u=1016 t=l,r  s=al
                            au   u=1003 s=pw 
                            ti   u=4    s=pw
                            isbn u=7
                            issn u=8
                            cc   u=20
                            su   u=21   s=pw
                            date u=30   r=r
                            dp   u=31   r=r
                            da   u=32   r=r
                            la   u=54   s=pw
                            ab   u=62   s=pw
                            note u=63   s=pw";
            removeDiacritics = "YES";
        };
    },
    /* University of Zurich */
    /* Illustrates the use of username/password keys and */
    /* Unicode characters in an ASCII property list.     */
    {
        type = zoom;
        name = "University of Z\U00FCrich";
        database = "IDS_UTF";
        host = "biblio.unizh.ch";
        port = "9909";
        options = {
            recordSyntax = "US MARC";
            resultEncoding = "utf-8";
            username = "z39";
            password = "z39";
        };
    },
/* ISI servers */
    /* Science Citation Index */
    {
        type = isi;
        name = "Web Of Science SCI";
        database = "SCI";
    },
    /* Social Sciences Citation Index */
    {
        type = isi;
        name = "Web Of Science SSCI";
        database = "SSCI";
    },
    /* Arts & Humanities Citation Index */
    {
        type = isi;
        name = "Web Of Science AHCI";
        database = "AHCI";
    },
    /* Index Chemiculus */
    {
        type = isi;
        name = "Web Of Science IC";
        database = "IC";
    },
    /* Current Chemical Reactions */
    {
        type = isi;
        name = "Web Of Science CCR";
        database = "CCR";
    },
/* DBLP servers */
    {
        type = dblp;
        name = "DBLP++ Authors";
        database = "Authors";
    },
    {
        type = dblp;
        name = "DBLP++ Keywords";
        database = "Keywords";
    }
)
